<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns0="http://www.coxandkings.com/integ/suppl/cache/trigger" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:tns="http://www.coxandkings.com/integ/suppl/acco" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.coxandkings.com/integ/suppl/common" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 ns1 tns mhdr oraext xp20 xref socket dvm oraxsl"
                xmlns:comm="http://www.coxandkings.com/integ/suppl/common"
                xmlns:ns2="http://www.opentravel.org/OTA/2003/05">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/AccoCacheJobsTriggerMessage.xsd"/>
            <oracle-xsl-mapper:rootElement name="AccoCacheJobTriggerMessage" namespace="http://www.coxandkings.com/integ/suppl/cache/trigger"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/SupplierCredentials.xsd"/>
            <oracle-xsl-mapper:rootElement name="SupplierCredentialsResponse" namespace="http://www.coxandkings.com/integ/suppl/common"/>
            <oracle-xsl-mapper:param name="SupplierCredentials"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="oramds:/apps/supplier/Accommodation/common/Schemas/AccoBusinessService.xsd"/>
            <oracle-xsl-mapper:rootElement name="AccoBusinessServiceRQ" namespace="http://www.coxandkings.com/integ/suppl/acco"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:named-template-schema>
         <oracle-xsl-mapper:template name="TestTemplate">
            <oracle-xsl-mapper:mapSources/>
         </oracle-xsl-mapper:template>
      </oracle-xsl-mapper:named-template-schema>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.0.0(XSLT Build 151013.0700.0085) AT [FRI AUG 05 11:39:24 IST 2016].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="SupplierCredentials"/>
   <xsl:template match="/">
      <tns:AccoBusinessServiceRQ>
         <tns:RequestHeader>
            <comm:SupplierCredentialsList>
               <xsl:copy-of select="$SupplierCredentials/ns1:SupplierCredentialsResponse/ns1:SupplierCredentials"/>
            </comm:SupplierCredentialsList>
         </tns:RequestHeader>
         <tns:RequestBody>
            <ns2:OTA_HotelAvailRQ RequestedCurrency="INR" Target="Test" Version="1.000">
               <ns2:AvailRequestSegments>
                  <ns2:AvailRequestSegment>
                     <ns2:HotelSearchCriteria>
                        <ns2:Criterion>
                           <ns2:RefPoint CountryCode="IN"/>
                           <ns2:HotelRef HotelCityCode="{/ns0:AccoCacheJobTriggerMessage/ns0:CityCode}"/>
                           <ns2:StayDateRange Start="{/ns0:AccoCacheJobTriggerMessage/ns0:StartDate}" End="{/ns0:AccoCacheJobTriggerMessage/ns0:EndDate}"/>
                           <ns2:RoomStayCandidates>
                              <xsl:call-template name="roomStay">
                                  <xsl:with-param name="startIndex">1</xsl:with-param>
                                  <xsl:with-param name="roomCount" select="/ns0:AccoCacheJobTriggerMessage/ns0:Rooms"/>
                                  <xsl:with-param name="guestCount" select="/ns0:AccoCacheJobTriggerMessage/ns0:Guests"/>
                              </xsl:call-template>
                           </ns2:RoomStayCandidates>
                        </ns2:Criterion>
                     </ns2:HotelSearchCriteria>
                  </ns2:AvailRequestSegment>
               </ns2:AvailRequestSegments>
            </ns2:OTA_HotelAvailRQ>
         </tns:RequestBody>
      </tns:AccoBusinessServiceRQ>
   </xsl:template>

   <xsl:template name="roomStay">
      <xsl:param name="startIndex"/>
      <xsl:param name="roomCount"/>
      <xsl:param name="guestCount"/>
      
      <xsl:if test="$startIndex &lt;= $roomCount">
          <ns2:RoomStayCandidate>
              <ns2:GuestCounts>
                  <xsl:call-template name="guestCounts-adult">
                      <xsl:with-param name="adultCount">
                          <xsl:choose>
                              <xsl:when test="(($startIndex = 1) and (($guestCount mod $roomCount) > 0))">
                                  <xsl:value-of select="floor($guestCount div $roomCount) + 1"/>
                              </xsl:when>
                              <xsl:otherwise>
                                  <xsl:value-of select="floor($guestCount div $roomCount)"/>
                              </xsl:otherwise>
                          </xsl:choose>
                      </xsl:with-param>
                  </xsl:call-template>
              </ns2:GuestCounts>
          </ns2:RoomStayCandidate>
      </xsl:if>
      
      <xsl:if test="$startIndex &lt;= $roomCount">
          <xsl:call-template name="roomStay">
              <xsl:with-param name="startIndex">
                  <xsl:value-of select="$startIndex + 1"/>
              </xsl:with-param>
              <xsl:with-param name="roomCount">
                  <xsl:value-of select="$roomCount"/>
              </xsl:with-param>
              <xsl:with-param name="guestCount">
                  <xsl:value-of select="$guestCount"/>
              </xsl:with-param>
          </xsl:call-template>
      </xsl:if>
   </xsl:template>
   
   <xsl:template name="guestCounts-adult">
      <xsl:param name="adultCount"/>
      <ns2:GuestCount AgeQualifyingCode="10" Count="{$adultCount}"/>
   </xsl:template>

</xsl:stylesheet>
